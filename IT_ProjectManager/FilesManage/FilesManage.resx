<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="rightManager.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>15, 6</value>
  </metadata>
  <metadata name="nodeImage.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>138, 6</value>
  </metadata>
  <data name="nodeImage.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADW
        FAAAAk1TRnQBSQFMAgEBCwEAAdQBAQHUAQEBEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAATADAAEBAQABCAYAAQwYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wkAARoBvAHwDQABvAKZ
        AbwrAAGZAXoBGwGZAbwKAAHwAQkBmQF1AU0BdQsAAZkcAAHwAZkBegFZAVgBGgHzARoBmQG8BgABvAEH
        AboB2gHtAVMBTAEyAVMBmQHwBgABmQGTAZkBvAEHAbwYAAG8AXkBWQJYAXkBmQF5ARoCvAYAAXkBVwG6
        AdQB7QFTAUwDMgF0BAAB8AGaAXUBAAEHAfcB7wH3AQcXAAF5AVkDWAFXARsB8QKZAbwDAAHwAZkCWAFX
        AboB1AHtAVMBTAIyAVMBdAMAAZkBdQGZAbwBBwLvAZIB9wHvAQcBvAHwFAABeQJYAVcBUQGXAbsBBwHx
        AgcDAAG8AXoCWAFXAboB1AHtAVMBTAMyAXQCAAG8AZkCvAIHAe8D9wLvAQcBvBQAAXkCVwFyAbkB2gEZ
        AfABuwEHAfADAAG8AXoCWAFXAboB1AHtAVMBTAEyATgBMgF0AgAD8AG8AgcB7wEcAXQBHALvAQcBvBQA
        AXkBUQG5AdoB1AGzAfcBCQHyAQkBuwMAAbwBegJYAVcBugHUAe0BlAFMAzIBdAMAAfABvAMHAXkBOAFZ
        ATgBeQHvAQcBvBQAAbsB2gHUAbMB7QF1ARoBvAHvAQcBvAMAAbwBegJYAVcBugHbAbUBGgHzAXoCMgF0
        AwAB8AK8AZkBWAI4AXoBwwF6AVkBeQG8FAAB2wHUAZEBdQFTAUwBUgEaAfMBmQHvAwABvAF6AlgBVwGY
        AvQB7wGTAfMBBwFTAXQDAAHwAbwBeQI4AVkCOAEyAZoBGgFZAZkUAAHvAXQBUwFNAUwBLAIyAVIBmQG8
        AwABvAF6AVgBmQHzARsBuwEIAfIBBwHvAbwBBwGZAwABvAFZAzgBWQF6AVkCOAF6ARoVAAF1AU0BTAEs
        BTIBLAGZAwABvAGgAfYBmQF5ARsB8wGZAbsB8QG8AQcBvAUAARoBWQU4AVkBmRcAAZkCUwEyAlkBUwEy
        AXQBBwQAAfABCAEaAfMBGgKZAgcBuwG8CAAB8AGZAVkBOAFZAXkBvBoAAZkCUwFZAVMBvAgAAbwCmQHw
        ARoBmQG8DQABmQG8HQABvAKZAbwLAAG8AZkB8IEAAfAMAAG8AZkBUwF5AbwKAAG8AbsBvAEAAvAB8QHy
        AfAHAAIaAbwPAAEHAbQBtQsAAbwBUwFZAjIBUwGZCAABvAG1AbMBtAK8A/EB8AUAAZkBdQFTAXUBmQK8
        AZkBvAgAAbwBuwG0AbMBkAGRAbUBvAcAAbwBeQFSAlkCMgE4AVMBeQG8BAAB8AGZAZQBjQGtAbMBBwG7
        AbwC8AYAAXUBTQFZAlMBeQF6AVMBUgHwBQAB8AG1ArMBkAFQAVgBeAGRAbQGAAG8AVICSwFSBDICOAFT
        BAABvAFYAZQBjQGtAbMBBwGzAbQBvAcAAbwBeQJTAXoCWQF1ASwBTQF0AbwCAAG0ArMBkAFxAVABWAJ6
        AnkBkQEHBAABvAFSAVEBWQFMAVkBLAQyAVMEAAG8AVgBlAGNAa0BswEHArMBBwgAAbwCegFZAlMBegMs
        AVMBvAEAAbQBswFxAU8BVwE4AXoBBwHwARsBGgGaAXgBBwMAAbwBMgJSATIBWQEyASwBOAEyATgBUwQA
        AbwBWAGUAY0BrQGzAe8BtAGzAQcFAAG8AZkBegJZARwBdAFNASsBUgFNAiwBMgG8AQAB7wFxAVABVwE4
        AeUBdAFGAm8BkwGZAZoBeQG8AgABvAFTAVkCMgFSAYsBcwMyAVMEAAG8AVgBlAGNAa0BswEHA+8FAAEa
        AVMBWQFTAVgBugG1AU0CMgFMAVMCLAG8AQABBwFyAVgBOAHlAfMBRwMmAU0BTALjAXUCAAG8A1MB4wG0
        AbMBrAGzAVIBLAFTBAABvAFYAZQBjQKtAbQBBwLvBQAB8AJTAlgBugG1AU0BMgFTAisCUwG8AgABeQH7
        AeUBGwFMByYCTQIAAbwBMgFZAVgBjwGNArsCswFzAVMEAAG8AVgBlAGNAbMBiwKzAbUB7wUAAfABdQEy
        AlgBugG1AU0CMgIrAXQB8AQAAZkB8wGaCCYBLAGTAgAB8AF6AVkBWAG3AbEBjgG0AfEBtAGRAZkEAAG8
        AVgBlAGNAQkBtAGKArMBtAYAAZoBMgJYAboBCQEaAXUBMgFSAZkB8AUAAfAB8wFNCCYBTQG8AwABvAF5
        AVgBlAG9AbcBjgH3AQcBuwUAAbwBeQGUAbwBtQK7AbMBrQGzBgAB8AF6AVgBmQEIAfABBwG8AZkBvAgA
        AXQIJgFNAfAEAAHwAnkBWAF1AbcBGgGxAbwGAAG8AZkBGwGUAb0BvAG0AbwBtAGzBwAEGgEIAbwBBwHw
        CQABvAF0Ak0BLAQmAXQFAAHwApkBmgF5AVgBlAHwAbwHAAEIAZkBGgGaAZQB8AO7CAABvAGZAbwBBxAA
        AbwBkwFNASwBTQG8BwABCAF5ARsBegF5CwACmQEbAZQBvQG8CgACvBQAArwJAAG8AZkBGgG8DAABCAGZ
        ARoBvEcAAbwBBwHvAe0B7AHqA0sBbQHsAe0B7wEHAbwHAAG8KQABvAHvArwB8AEHAUwCUgEHArwBBwHv
        AfAFAAG8AZkBdAEHAfcBvBwAAbwJAAHwAQcC8QHyAbwDTAG8AfIB8QHwAQcEAAG8AZkBdAGTAfAB8gH/
        AfEC8AwAAfAB8QHwCQAB8AHxAQcKAAG8AfEB8gHzAbwDTAHwAfIB8QHwAbwDAAG8AXUBdAHwBv8B8gHw
        CQABkwF0AQcB9AHyAfAIAAHxAf8B8QEAAQcBkwcAAfAB8gHzAfQBGgNMARoB8wHyAfEBvAIAAbwBmQG8
        AvMBlAF1AZoB9AH/A/QB8gHwBQABmQJTAQcBvAHvAbwB8wHyAvADAAHwAbwB8wHxAbwBlAF0AZkBkwGZ
        AbwEAAHwAvMB9AEaA0wBGwH0AfMB8gG8AgAB8ALxAe8BmQF1AUwBLAFTARoC9AH/AfQB8QMAAbwBUwIs
        ARoB9gHDAfQBBwHvAfIB9AHwAwACbwKTAnUBTAF0AfABmQF0AbwCAAGTAW8BvAH0Af8BGgNMARsB9AHz
        AbwBkwEHAQAB8ALxAfABmQF1AUwDMgF6AfQB8QHwAgABvAF0AU0BLAFNA3oBUwF6AfYB8gHwAfEB8AIA
        AfABGgGZAXUBegFNAVMCKwFSAXQBmQEHAgABFwFGAW8BvAH/AfQDGgL0AbwBbwFHAeMDAAHwAfEBGgF1
        AUwDMgFTBQABdQIsAVMBegFTAZkB8QEaATIBmQEbARoDAAHwAfIBGgF1AU0CUwFZATEBUgFMATEBMgGZ
        AgABbwNGAbwF/wHwAWkCRgEWBAAB8AGZAXUBTAMyAVMFAAF1ATIBegFZATIBUgF0AXUBGwEaAXQBegHw
        AwAB8AHxAZkCTAEyAVIBWQRSAZkBvAIAAQcBRwFGAUABRgHyA/8B8gFpAUABRgFNAQcFAAGZAXUBTAMy
        AVIFAAGZAVMBLAF0AVMDMgFTAfEB8gFTAZkGAAGZAVMBMgRZAXkGAAEHARcCQAFGARoB/wHwAWkBQAFG
        ARYBBwYAAZkBdQFNATIBUwEyAVIGAAG8AXkBUwUyAVMCGgG8BgABvAF6B1kBmQUAAQcBFwFGAUABRgHx
        AUYBIAFGAZMB8gcAA7wBUwEyATgBUwkAAXkGMgGZBwABvAF6AlkCUwJZAZkBvAYAAQcBFwFGASABRgEg
        AUYBbwEcAfEHAAG8ApkB8QGaAVMBdQkAAfACmQF5A3UBdAG8CAABGgF6AlMBegEaCQABBwEXAUcBIAFG
        ARcBkwHvAfEJAAEHAXQBGgHzAbwcAAEaAbwMAAG8AeMBIAFpArwBkwHxCgABvAGZAbwsAAG8AW8BvAEA
        AbwBkwHwMgABQgFNAT4HAAE+AwABKAMAAUADAAEwAwABAQEAAQEFAAGAAQEWAAP/AQAB/wEfAf8BDwL/
        AgAB/gEPAfwBDwH+Af8CAAHwAQMB8AEBAfgBHwIAAeABAwHwAQEB4gEPAgAB4AEDAYABAQHAAQECAAHg
        AQMBgAEBAYABAQIAAeABAwGAAQEBgAEBAgAB4AEDAYABAQHAAQECAAHgAQMBgAEBAcABAQIAAeABAwGA
        AQEBwAEBAgAB4AEDAYABAQHAAQMCAAHgAQMBgAEDAeABDwIAAeABBwGAAQ8B8AEfAgAB+AEfAeABPwH+
        AX8CAAH8AT8B+AP/AgAG/wIAA/8BvwH8AR8B+AGDAfgB/wH+AT8B+AEPAfABAwHgAQ8B8AEPAeABAwHA
        AQcB4AEHAcABDwHAAQMBwAEPAeABAQGAAQMBwAEDAcABDwHwAQABgAEBAcABAwHAAQ8BgAEAAYABAAHA
        AQMBwAEPAYABAAGAAQABwAEDAcABDwGAAQABwAEAAcABAwHAAQ8BgAEBAeABAAHAAQMBwAEPAcABAwHg
        AQAB4AEHAcABDwHAAQ8B8AEBAeABDwHAAQ8B4AEfAfABAwHgAQ8B4AEPAfAC/wEDAfgBPwH4AR8B+QL/
        AecB/AE/AfwBPwj/AYABAAH+Bf8BgAEAAfgBHwL/Af4B/wGAAQEB4AEHAf8BjwH4Af8BwAEBAcABAwH+
        AQcB+AGfAcABAQGAAQAB+AEAAeABAwHAAQEBgAEAAeABAAHgAQEBgAEAAYABAQGAAQABwAEBAYABAAHg
        AQ8BgAEDAYABAQGAAQAB8AEPAYABAwGAAQEBgAEAAfgBDwGAAQMB8AEPAcABAQH4AQ8BwAEDAfABAwHg
        AQMB+AEPAfgBBwHwAQMB8AEDAfgBDwH4AQMB/AEPAfgBAwH+AQ8D/wE/AfwBAwH/AR8E/wH+ASMG/ws=
</value>
  </data>
  <metadata name="gridRightManager.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>258, 3</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>39</value>
  </metadata>
</root>